{"version":3,"sources":["logo.svg","Utils/RefreshToken.js","Components/Messenger.js","App.js","reportWebVitals.js","index.js"],"names":["refreshTokenSetup","res","refreshTiming","tokenObj","expires_in","localStorage","setItem","id_token","refreshToken","a","reloadAuthResponse","newAuthRes","setTimeout","clientId","Messenger","props","state","otherUser","text","userName","users","handleChange","bind","handleSubmit","buttonText","onSuccess","console","log","profileObj","alert","name","email","setState","fetch","process","method","headers","body","JSON","stringify","username","userdisplayname","authToken","then","resp","json","resp_json","onFailure","cookiePolicy","style","marginTop","isSignedIn","this","id","onChange","event","target","value","map","obj","onSubmit","htmlFor","onLogoutSuccess","e","preventDefault","length","newItem","Date","now","sender","receiver","message","React","Component","TodoList","messages","interval","setInterval","tick","clearInterval","className","item","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7b48e825.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export const refreshTokenSetup = (res) => {\r\n    // Timing to renew access token\r\n    let refreshTiming = (res.tokenObj.expires_in || 3600 - 5 * 60) * 1000;\r\n\r\n     localStorage.setItem('authToken', res.tokenObj.id_token);\r\n\r\n  //  console.log(res);\r\n//console.log(res.tokenObj.id_token);\r\n  \r\n    const refreshToken = async () => {\r\n      const newAuthRes = await res.reloadAuthResponse();\r\n      refreshTiming = (newAuthRes.expires_in || 3600 - 5 * 60) * 1000;\r\n   //   console.log('newAuthRes:', newAuthRes);\r\n   //   console.log('ID TOKEN:', newAuthRes.id_token); \r\n      // saveUserToken(newAuthRes.access_token);  <-- save new token\r\n    //  localStorage.setItem('authToken', newAuthRes.id_token);\r\n\t localStorage.setItem('authToken', newAuthRes.id_token);\r\n  \r\n      // Setup the other timer after the first one\r\n      setTimeout(refreshToken,refreshTiming) ;//refreshTiming\r\n    };\r\n  \r\n    // Setup first refresh timer\r\n    setTimeout(refreshToken, refreshTiming);\r\n  };","import React, {Component} from 'react';\r\nimport ReactDOM from 'react';\r\nimport '../App.css';\r\n\r\nimport { GoogleLogin, GoogleLogout } from 'react-google-login';\r\n// refresh token\r\nimport { refreshTokenSetup } from '../Utils/RefreshToken';\r\n\r\nconst clientId =\r\n  '1006529598178-qes2svv7q1t0a6pfgq01gq1te9fosee6.apps.googleusercontent.com';\r\n\r\nconst apiUrl = () => { if (process.env.REACT_APP_API_URL === undefined) \r\n\t\t\t\treturn window.location.protocol + \"//\" + window.location.host + \"/api\";\r\n\t\t\telse \r\n\t\t\t\treturn process.env.REACT_APP_API_URL;\t\r\n\t\t       }\r\n\r\n// var otherUser;\r\n\r\nclass Messenger extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { otherUser : '', text: '', userName : '', users: []};\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n// \r\n\r\n  render() {\r\n //   console.log(apiUrl()); \r\n  //  console.log(process.env.REACT_APP_API_URL);\t\r\n    const onSuccess = (res) => {\r\n    console.log('Login Success: currentUser:', res.profileObj);\r\n    alert(\r\n      `Logged in successfully welcome ${res.profileObj.name} 😍. \\n See console for full profile object.`\r\n    );\r\n   console.log(res.profileObj.email);\r\n   refreshTokenSetup(res);\r\n   \r\n   this.setState( { userName : res.profileObj.email\r\n\t\t});\r\n\r\n fetch(`${apiUrl()}/user/`,\r\n    {\r\n      method: 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n        },\r\n      body : JSON.stringify({\r\n       username:  res.profileObj.email,\r\n       userdisplayname: res.profileObj.name,\r\n\r\n    })\r\n    }\r\n    )\r\n\r\n  fetch(`${apiUrl()}/user/otherUsers/${this.state.userName}`,\r\n   {\r\n     method: 'GET',\r\n     headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json',\r\n          'Authorization' : 'Bearer ' + localStorage.authToken\r\n          }\r\n   }\r\n   )\r\n       \t .then(resp => (resp.json()))\r\n                   .then (resp_json => (this.setState({\r\n\t\t\tusers : resp_json ,\r\n\t\t\totherUser : resp_json[0].username\t})\r\n\t\t));\r\n //this.setState ({ otherUser: this.state.users[0]\r\n//\t\t});\r\n\r\n   \r\n  };\r\n\r\n  const onFailure = (res) => {\r\n    console.log('Login failed: res:', res);\r\n    alert(\r\n      `Failed to login. 😢 `\r\n    );\r\n  };\r\n\r\n const onLogoutSuccess = () => { \r\n    this.setState( { otherUser : '', text: '', userName : '', users: []\r\n\t\t});\t\r\n    console.log('Logout made successfully');\r\n    alert('Logout made successfully ✌');\r\n  };\r\n\r\n\r\n const handleChange = (event) => {\r\n  this.setState({ otherUser : event.target.value\r\n\t\t})\r\n //otherUser =  event.target.value;\r\n // alert(event.target.value);\r\n   }\r\n\r\nconst userOption = (obj) => \r\n        {\r\n         //         console.log(obj);\r\n\treturn  <option>{obj.username}</option>;\r\n          }\r\n //  console.log('INSIDE MESSENGER RENDER');\r\n  // console.log(this.state)\r\n\r\n    return (\r\n      <div>\r\n        <GoogleLogin\r\n        clientId={clientId}\r\n        buttonText=\"Login\"\r\n        onSuccess={onSuccess}\r\n        onFailure={onFailure}\r\n        cookiePolicy={'single_host_origin'}\r\n        style={{ marginTop: '100px' }}\r\n        isSignedIn={true}\r\n      /><b>Logged in as : {this.state.userName}</b><br/>\r\n      <select id=\"users\" name=\"users\" onChange={handleChange}> \r\n          {this.state.users.map(userOption)} \r\n      </select> \r\n        <TodoList  userName={this.state.userName} otherUser={this.state.otherUser}/> \r\n        <form onSubmit={this.handleSubmit}>\r\n          <label htmlFor=\"new-todo\">\r\n            Enter your message here...\r\n          </label>\r\n          <input\r\n            id=\"new-todo\"\r\n            onChange={this.handleChange}\r\n            value={this.state.text}\r\n          />\r\n          <button>\r\n            Send\r\n          </button>\r\n\t\r\n        </form>\r\n\t<GoogleLogout\r\n        clientId={clientId}\r\n        buttonText=\"Logout\"\r\n        onLogoutSuccess={onLogoutSuccess}\r\n      ></GoogleLogout>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  handleChange(e) {\r\n    this.setState({ text: e.target.value });\r\n  }\r\n\r\n  handleSubmit(e) {\r\n    e.preventDefault();\r\n    if (this.state.text.length === 0) {\r\n      return;\r\n    }\r\n    const newItem = {\r\n      text: this.state.text,\r\n      id: Date.now()\r\n    };\r\n\r\n    console.log(newItem.text);\r\n\r\n    fetch(`${apiUrl()}/message/`,\r\n    {\r\n      method: 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n        'Authorization' : 'Bearer ' + localStorage.authToken\r\n    },\r\n      body : JSON.stringify({\r\n        sender:  this.state.userName,\r\n        receiver: this.state.otherUser,\r\n        message: newItem.text\r\n    })\r\n    }\r\n    )\r\n    .then (() => {console.log(\"MESSAGE SENT\")})\r\n /*   this.setState(state => ({\r\n      items: state.items.concat(newItem),\r\n      text: ''\r\n    }));*/\r\n  }\r\n}\r\n\r\nclass TodoList extends React.Component {\r\n\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = { messages: [] };\r\n   //   this.state = { seconds: 0 };\r\n    }\r\n  \r\n    tick() {\r\n      var newMessages = [];\r\n\r\n// console.log(this.props.userName);\r\n\r\n      fetch(`${apiUrl()}/message/?sender=${this.props.userName}&receiver=${this.props.otherUser}`,\r\n      {\r\n        method: 'GET',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json',\r\n          'Authorization' : 'Bearer ' + localStorage.authToken\r\n          }\r\n      \r\n      }\r\n      )\r\n      .then(resp => resp.json())\r\n      .then(messages => {\r\n        this.setState({\r\n         messages: messages\r\n        })\r\n      })\r\n\r\n\r\n     \r\n    }\r\n  \r\n    componentDidMount() {\r\n      this.interval = setInterval(() => this.tick(), 1000);\r\n      console.log(\"Inside did Mount\");\r\n    }\r\n  \r\n    componentWillUnmount() {\r\n      clearInterval(this.interval);\r\n    }\r\n  \r\n  \r\n \r\n  render() {\r\n    \r\n    return (\r\n  /*    <ul>\r\n        {this.props.items.map(item => (\r\n          <li key={item.id}>{item.text}</li>\r\n        ))}\r\n      </ul>\r\n      */\r\n     <div className = \"Messages-box\">\r\n         {this.state.messages.map(item => (\r\n       \r\n       <div className = \"Message-element\">  {item.message}</div>\r\n        ))}\r\n     \r\n     </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default Messenger;\r\n\r\n\r\n//","import logo from './logo.svg';\r\nimport './App.css';\r\nimport Messenger from './Components/Messenger.js';\r\nimport Login from './Components/Login';\r\nimport Logout from './Components/Logout';\r\nimport UserDropDown from './Components/UserDropDown';\r\nimport {userName} from './Components/Login';\r\n\r\n\r\nfunction App() {\r\n\r\n  \r\n\r\n  return (\r\n    <div className=\"App\">\r\n  {/*     <header className=\"App-header\">\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        <p>\r\n          Edit <code>src/App.js</code> and save to reload.\r\n        </p>\r\n        <a\r\n          className=\"App-link\"\r\n          href=\"https://reactjs.org\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          Learn React\r\n        </a>\r\n      </header> */}\r\n     \r\n      <br />\r\n       \r\n      <Messenger/>\r\n    </div>\r\n \r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}