{"version":3,"sources":["logo.svg","Utils/RefreshToken.js","Components/Messenger.js","App.js","reportWebVitals.js","index.js"],"names":["refreshTokenSetup","res","refreshTiming","tokenObj","expires_in","localStorage","setItem","id_token","refreshToken","a","reloadAuthResponse","newAuthRes","setTimeout","clientId","apiUrl","window","location","protocol","host","Messenger","props","state","otherUser","text","userName","users","handleChange","bind","handleSubmit","buttonText","onSuccess","console","log","profileObj","alert","name","email","setState","fetch","method","headers","Accept","body","JSON","stringify","username","userdisplayname","Authorization","authToken","then","resp","json","resp_json","onFailure","cookiePolicy","style","marginTop","isSignedIn","this","id","onChange","event","target","value","map","obj","onSubmit","htmlFor","onLogoutSuccess","e","preventDefault","length","newItem","Date","now","sender","receiver","message","React","Component","TodoList","messages","interval","setInterval","tick","clearInterval","className","item","messageDate","time","toLocaleString","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0aaecd03.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export const refreshTokenSetup = (res) => {\r\n    // Timing to renew access token\r\n    let refreshTiming = (res.tokenObj.expires_in || 3600 - 5 * 60) * 1000;\r\n\r\n     localStorage.setItem('authToken', res.tokenObj.id_token);\r\n\r\n  //  console.log(res);\r\n//console.log(res.tokenObj.id_token);\r\n  \r\n    const refreshToken = async () => {\r\n      const newAuthRes = await res.reloadAuthResponse();\r\n      refreshTiming = (newAuthRes.expires_in || 3600 - 5 * 60) * 1000;\r\n   //   console.log('newAuthRes:', newAuthRes);\r\n   //   console.log('ID TOKEN:', newAuthRes.id_token); \r\n      // saveUserToken(newAuthRes.access_token);  <-- save new token\r\n    //  localStorage.setItem('authToken', newAuthRes.id_token);\r\n\t localStorage.setItem('authToken', newAuthRes.id_token);\r\n  \r\n      // Setup the other timer after the first one\r\n      setTimeout(refreshToken,refreshTiming) ;//refreshTiming\r\n    };\r\n  \r\n    // Setup first refresh timer\r\n    setTimeout(refreshToken, refreshTiming);\r\n  };","import React, { Component } from \"react\";\r\nimport ReactDOM from \"react\";\r\nimport \"../App.css\";\r\n\r\nimport { GoogleLogin, GoogleLogout } from \"react-google-login\";\r\n// refresh token\r\nimport { refreshTokenSetup } from \"../Utils/RefreshToken\";\r\n\r\nconst clientId =\r\n  \"1006529598178-qes2svv7q1t0a6pfgq01gq1te9fosee6.apps.googleusercontent.com\";\r\n\r\nconst apiUrl = () => {\r\n  if (process.env.REACT_APP_API_PORT == 80)\r\n    return window.location.protocol + \"//\" + window.location.host + \"/api\";\r\n  else\r\n    return (\r\n      window.location.protocol +\r\n      \"//\" +\r\n      window.location.hostname +\r\n      \":\" +\r\n      process.env.REACT_APP_API_PORT +\r\n      \"/api\"\r\n    );\r\n};\r\n\r\n// var otherUser;\r\n\r\nclass Messenger extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { otherUser: \"\", text: \"\", userName: \"\", users: [] };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n  //\r\n\r\n  render() {\r\n    //   console.log(apiUrl());\r\n    //  console.log(process.env.REACT_APP_API_URL);\r\n    const onSuccess = (res) => {\r\n      console.log(\"Login Success: currentUser:\", res.profileObj);\r\n      alert(\r\n        `Logged in successfully welcome ${res.profileObj.name} 😍. \\n See console for full profile object.`\r\n      );\r\n      console.log(res.profileObj.email);\r\n      refreshTokenSetup(res);\r\n\r\n      this.setState({ userName: res.profileObj.email });\r\n\r\n      fetch(`${apiUrl()}/user/`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          username: res.profileObj.email,\r\n          userdisplayname: res.profileObj.name,\r\n        }),\r\n      });\r\n\r\n      fetch(`${apiUrl()}/user/otherUsers/${this.state.userName}`, {\r\n        method: \"GET\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: \"Bearer \" + localStorage.authToken,\r\n        },\r\n      })\r\n        .then((resp) => resp.json())\r\n        .then((resp_json) =>\r\n          this.setState({\r\n            users: resp_json,\r\n            otherUser: resp_json[0].username,\r\n          })\r\n        );\r\n    };\r\n\r\n    const onFailure = (res) => {\r\n      console.log(\"Login failed: res:\", res);\r\n      alert(`Failed to login. 😢 `);\r\n    };\r\n\r\n    const onLogoutSuccess = () => {\r\n      this.setState({ otherUser: \"\", text: \"\", userName: \"\", users: [] });\r\n      console.log(\"Logout made successfully\");\r\n      alert(\"Logout made successfully ✌\");\r\n    };\r\n\r\n    const handleChange = (event) => {\r\n      this.setState({ otherUser: event.target.value });\r\n    };\r\n\r\n    const userOption = (obj) => {\r\n      //         console.log(obj);\r\n      return <option>{obj.username}</option>;\r\n    };\r\n    //  console.log('INSIDE MESSENGER RENDER');\r\n    // console.log(this.state)\r\n\r\n    return (\r\n      <div>\r\n        <GoogleLogin\r\n          clientId={clientId}\r\n          buttonText=\"Login\"\r\n          onSuccess={onSuccess}\r\n          onFailure={onFailure}\r\n          cookiePolicy={\"single_host_origin\"}\r\n          style={{ marginTop: \"100px\" }}\r\n          isSignedIn={true}\r\n        />\r\n        <b>Logged in as : {this.state.userName}</b>\r\n        <br />\r\n        <select id=\"users\" name=\"users\" onChange={handleChange}>\r\n          {this.state.users.map(userOption)}\r\n        </select>\r\n        <TodoList\r\n          userName={this.state.userName}\r\n          otherUser={this.state.otherUser}\r\n        />\r\n        <form onSubmit={this.handleSubmit}>\r\n          <label htmlFor=\"new-todo\">Enter your message here...</label>\r\n          <input\r\n            id=\"new-todo\"\r\n            onChange={this.handleChange}\r\n            value={this.state.text}\r\n          />\r\n          <button>Send</button>\r\n        </form>\r\n        <GoogleLogout\r\n          clientId={clientId}\r\n          buttonText=\"Logout\"\r\n          onLogoutSuccess={onLogoutSuccess}\r\n        ></GoogleLogout>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  handleChange(e) {\r\n    this.setState({ text: e.target.value });\r\n  }\r\n\r\n  handleSubmit(e) {\r\n    e.preventDefault();\r\n    if (this.state.text.length === 0) {\r\n      return;\r\n    }\r\n    const newItem = {\r\n      text: this.state.text,\r\n      id: Date.now(),\r\n    };\r\n\r\n    console.log(newItem.text);\r\n\r\n    fetch(`${apiUrl()}/message/`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + localStorage.authToken,\r\n      },\r\n      body: JSON.stringify({\r\n        sender: this.state.userName,\r\n        receiver: this.state.otherUser,\r\n        message: newItem.text,\r\n      }),\r\n    }).then(() => {\r\n      console.log(\"MESSAGE SENT\");\r\n    });\r\n  }\r\n}\r\n\r\nclass TodoList extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { messages: [] };\r\n  }\r\n\r\n  tick() {\r\n    var newMessages = [];\r\n\r\n    // console.log(this.props.userName);\r\n\r\n    fetch(\r\n      `${apiUrl()}/message/?sender=${this.props.userName}&receiver=${\r\n        this.props.otherUser\r\n      }`,\r\n      {\r\n        method: \"GET\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: \"Bearer \" + localStorage.authToken,\r\n        },\r\n      }\r\n    )\r\n      .then((resp) => resp.json())\r\n      .then((messages) => {\r\n        this.setState({\r\n          messages: messages,\r\n        });\r\n      });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.interval = setInterval(() => this.tick(), 1000);\r\n    console.log(\"Inside did Mount\");\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.interval);\r\n  }\r\n\r\n  render() {\r\n    const message = (item) => {\r\n      let message;\r\n      let messageDate = new Date(item.time);\r\n      if (item.sender === this.props.userName) {\r\n        message = (\r\n          <div className=\"Message-element\">\r\n            {item.message}{\" \"}\r\n            <span className=\"Message-time\">{messageDate.toLocaleString()}</span>\r\n          </div>\r\n        );\r\n      } else {\r\n        message = (\r\n          <div className=\"Received-Message-element\">\r\n            {item.message}{\" \"}\r\n            <span className=\"Message-time\">{messageDate.toLocaleString()}</span>\r\n          </div>\r\n        );\r\n      }\r\n      return message;\r\n    };\r\n    // console.log(\"INSIDE RENDER\");\r\n    // console.log(this.props.userName);\r\n\r\n    return (\r\n      <div className=\"Messages-box\">\r\n        {this.state.messages.map((item) => message(item))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Messenger;\r\n\r\n//\r\n","import logo from \"./logo.svg\";\r\nimport \"./App.css\";\r\nimport Messenger from \"./Components/Messenger.js\";\r\nimport Login from \"./Components/Login\";\r\nimport Logout from \"./Components/Logout\";\r\nimport UserDropDown from \"./Components/UserDropDown\";\r\nimport { userName } from \"./Components/Login\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Messenger />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}