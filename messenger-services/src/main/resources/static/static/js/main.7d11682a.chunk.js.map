{"version":3,"sources":["logo.svg","Utils/ApiUrl.js","Components/MessageBox.js","Components/Messenger.js","Utils/RefreshToken.js","App.js","reportWebVitals.js","index.js"],"names":["apiUrl","window","location","protocol","host","MessageBox","props","useState","messages","setMessages","isLoading","setIsLoading","useEffect","interval","setInterval","fetch","otherUser","method","headers","Accept","Authorization","localStorage","authToken","then","resp","json","clearInterval","userName","CircularProgress","className","map","item","messageDate","Date","time","sender","message","toLocaleString","clientId","Messenger","setOtherUser","text","setText","setUserName","isLoggedIn","setIsLoggedIn","users","setUsers","isOtherUserSelected","setIsOtherUserSelected","buttonText","onLogoutSuccess","console","log","alert","id","name","onChange","event","target","value","obj","username","onSuccess","res","profileObj","refreshTiming","tokenObj","expires_in","setItem","id_token","refreshToken","a","reloadAuthResponse","newAuthRes","setTimeout","refreshTokenSetup","email","resp_json","undefined","onFailure","cookiePolicy","style","marginTop","isSignedIn","onSubmit","e","preventDefault","length","body","JSON","stringify","receiver","htmlFor","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7d11682a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","const apiUrl = () => {\r\n  if (process.env.REACT_APP_API_PORT == 80)\r\n    return window.location.protocol + \"//\" + window.location.host + \"/api\";\r\n  else\r\n    return (\r\n      window.location.protocol +\r\n      \"//\" +\r\n      window.location.hostname +\r\n      \":\" +\r\n      process.env.REACT_APP_API_PORT +\r\n      \"/api\"\r\n    );\r\n};\r\n\r\nexport default apiUrl;\r\n","import React, { Component, useEffect, useState } from \"react\";\r\nimport ReactDOM from \"react\";\r\nimport \"../App.css\";\r\nimport apiUrl from \"../Utils/ApiUrl\";\r\nimport { CircularProgress } from \"@mui/material\";\r\n\r\nfunction MessageBox(props) {\r\n  const [messages, setMessages] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const tick = () => {\r\n      fetch(`${apiUrl()}/message/?receiver=${props.otherUser}`, {\r\n        method: \"GET\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: \"Bearer \" + localStorage.authToken,\r\n        },\r\n      })\r\n        .then((resp) => resp.json())\r\n        .then((messages) => {\r\n          setMessages(messages);\r\n          setIsLoading(false);\r\n        });\r\n    };\r\n\r\n    const interval = setInterval(tick, 1000);\r\n    return () => clearInterval(interval);\r\n  }, [props.otherUser, props.userName]);\r\n\r\n  const message = (item) => {\r\n    let message;\r\n    let messageDate = new Date(item.time);\r\n    if (item.sender === props.userName) {\r\n      message = (\r\n        <div className=\"Message-element\">\r\n          {item.message}{\" \"}\r\n          <span className=\"Message-time\">{messageDate.toLocaleString()}</span>\r\n        </div>\r\n      );\r\n    } else {\r\n      message = (\r\n        <div className=\"Received-Message-element\">\r\n          {item.message}{\" \"}\r\n          <span className=\"Message-time\">{messageDate.toLocaleString()}</span>\r\n        </div>\r\n      );\r\n    }\r\n    return message;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {isLoading ? (\r\n        <CircularProgress />\r\n      ) : (\r\n        <div className=\"Messages-box\">\r\n          {messages.map((item) => message(item))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MessageBox;\r\n","import React, { Component, useState } from \"react\";\r\nimport ReactDOM from \"react\";\r\nimport \"../App.css\";\r\nimport MessageBox from \"./MessageBox\";\r\n\r\nimport { GoogleLogin, GoogleLogout } from \"react-google-login\";\r\n// refresh token\r\nimport { refreshTokenSetup } from \"../Utils/RefreshToken\";\r\nimport apiUrl from \"../Utils/ApiUrl\";\r\n\r\nconst clientId =\r\n  \"1006529598178-qes2svv7q1t0a6pfgq01gq1te9fosee6.apps.googleusercontent.com\";\r\n\r\nfunction Messenger(props) {\r\n  const [otherUser, setOtherUser] = useState(\"\");\r\n  const [text, setText] = useState(\"\");\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [users, setUsers] = useState([]);\r\n  const [isOtherUserSelected, setIsOtherUserSelected] = useState(false);\r\n\r\n  const onSuccess = (res) => {\r\n    console.log(\"Login Success: currentUser:\", res.profileObj);\r\n    alert(\r\n      `Logged in successfully welcome ${res.profileObj.name} 😍. \\n See console for full profile object.`\r\n    );\r\n\r\n    refreshTokenSetup(res);\r\n\r\n    setUserName(res.profileObj.email);\r\n    setIsLoggedIn(true);\r\n\r\n    fetch(`${apiUrl()}/user/`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + localStorage.authToken,\r\n      },\r\n    });\r\n\r\n    fetch(`${apiUrl()}/user/otherUsers/`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + localStorage.authToken,\r\n      },\r\n    })\r\n      .then((resp) => resp.json())\r\n      .then((resp_json) => {\r\n        setUsers(resp_json);\r\n        setOtherUser(resp_json[0].username);\r\n        if (resp_json[0].username != undefined) setIsOtherUserSelected(true);\r\n      });\r\n  };\r\n\r\n  const onFailure = (res) => {\r\n    console.log(\"Login failed: res:\", res);\r\n    alert(`Failed to login. 😢 `);\r\n  };\r\n\r\n  const onLogoutSuccess = () => {\r\n    setOtherUser(\"\");\r\n    setText(\"\");\r\n    setUserName(\"\");\r\n    setUsers([]);\r\n    setIsLoggedIn(false);\r\n    setIsOtherUserSelected(false);\r\n    console.log(\"Logout made successfully\");\r\n    alert(\"Logout made successfully ✌\");\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    console.log(event);\r\n    setOtherUser(event.target.value);\r\n    setIsOtherUserSelected(true);\r\n  };\r\n\r\n  const userOption = (obj) => {\r\n    return <option>{obj.username}</option>;\r\n  };\r\n\r\n  const handleTextChange = (e) => {\r\n    setText(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (text.length === 0) {\r\n      return;\r\n    }\r\n\r\n    fetch(`${apiUrl()}/message/`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + localStorage.authToken,\r\n      },\r\n      body: JSON.stringify({\r\n        receiver: otherUser,\r\n        message: text,\r\n      }),\r\n    }).then(() => {\r\n      console.log(\"MESSAGE SENT\");\r\n      setText(\"\");\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {isLoggedIn ? (\r\n        <div>\r\n          <GoogleLogout\r\n            clientId={clientId}\r\n            buttonText=\"Logout\"\r\n            onLogoutSuccess={onLogoutSuccess}\r\n          ></GoogleLogout>\r\n          <b> Logged in as : {userName} </b>\r\n          <br /> <br />\r\n          <select id=\"users\" name=\"users\" onChange={handleChange}>\r\n            {users.map(userOption)}\r\n          </select>\r\n          <br /> <br />\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <GoogleLogin\r\n            clientId={clientId}\r\n            buttonText=\"Login\"\r\n            onSuccess={onSuccess}\r\n            onFailure={onFailure}\r\n            cookiePolicy={\"single_host_origin\"}\r\n            style={{ marginTop: \"100px\" }}\r\n            isSignedIn={true}\r\n          />\r\n          <b> Please login with you email id to get started</b>\r\n        </div>\r\n      )}\r\n\r\n      {isOtherUserSelected ? (\r\n        <div>\r\n          <MessageBox userName={userName} otherUser={otherUser} />\r\n          <form onSubmit={handleSubmit}>\r\n            <label htmlFor=\"new-todo\">Enter your message here...</label>\r\n            <input id=\"new-todo\" onChange={handleTextChange} value={text} />\r\n            <button>Send</button>\r\n          </form>\r\n        </div>\r\n      ) : (\r\n        <div></div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n//}\r\nexport default Messenger;\r\n","export const refreshTokenSetup = (res) => {\r\n    // Timing to renew access token\r\n    let refreshTiming = (res.tokenObj.expires_in || 3600 - 5 * 60) * 1000;\r\n\r\n     localStorage.setItem('authToken', res.tokenObj.id_token);\r\n\r\n  //  console.log(res);\r\n//console.log(res.tokenObj.id_token);\r\n  \r\n    const refreshToken = async () => {\r\n      const newAuthRes = await res.reloadAuthResponse();\r\n      refreshTiming = (newAuthRes.expires_in || 3600 - 5 * 60) * 1000;\r\n   //   console.log('newAuthRes:', newAuthRes);\r\n   //   console.log('ID TOKEN:', newAuthRes.id_token); \r\n      // saveUserToken(newAuthRes.access_token);  <-- save new token\r\n    //  localStorage.setItem('authToken', newAuthRes.id_token);\r\n\t localStorage.setItem('authToken', newAuthRes.id_token);\r\n  \r\n      // Setup the other timer after the first one\r\n      setTimeout(refreshToken,refreshTiming) ;//refreshTiming\r\n    };\r\n  \r\n    // Setup first refresh timer\r\n    setTimeout(refreshToken, refreshTiming);\r\n  };","import logo from \"./logo.svg\";\r\nimport \"./App.css\";\r\nimport Messenger from \"./Components/Messenger.js\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Messenger />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}